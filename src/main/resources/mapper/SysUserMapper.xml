<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shenque.dao.SysUserMapper">
    <resultMap id="sysUser" type="com.shenque.entity.SysUser">
        <result column="id" property="id" />
        <result column="usercode" property="usercode" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="salt" property="salt" />
        <result column="locked" property="locked" />
    </resultMap>
    <!--
        MyBatis中在查询进行select映射的时候，返回类型可以用resultType，也可以用resultMap，resultType是直接表示返回类型的
        (对应着我们的model对象中的实体)，而resultMap则是对外部ResultMap的引用(提前定义了db和model之间的隐射key-value关系)，
        但是resultType跟resultMap不能同时存在。
    -->
    <select id="findById" parameterType="java.lang.Long" resultMap="sysUser">
        SELECT
        id ,
        usercode,
        username,
        password,
        salt,
        locked
        FROM sys_user
        WHERE
        id=#{id}
    </select>
    <!--
        执行增加操作的SQL语句。id和parameterType分别与SysUserMapper接口中的addUser方法的名字和参数类型一致。
    useGeneratedKeys设置为"true"表明要MyBatis获取由数据库自动生成的主键；keyProperty="id"指定把哪个列是主键！
    -->
    <insert id="addUser" parameterType ="com.shenque.entity.SysUser" useGeneratedKeys="true" keyProperty="id" >
        insert  into sys_user(usercode,username,password,salt,locked)
        values (#{usercode},#{username},#{password},#{salt},#{locked})
    </insert>

    <!--
        修改操作，比较简单
     -->
    <update id="update" parameterType="com.shenque.entity.SysUser" >
        update sys_user
          set
              usercode=#{usercode},
              username=#{username},
              password=#{password},
              salt=#{salt},
              locked=#{locked}
         where id=#{id}
    </update>


</mapper>
